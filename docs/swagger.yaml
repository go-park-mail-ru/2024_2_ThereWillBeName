definitions:
  http.Credentials:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  httpresponses.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.Place:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  models.Review:
    properties:
      created_at:
        type: string
      id:
        type: integer
      place_id:
        type: integer
      rating:
        type: integer
      review_text:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      login:
        type: string
    type: object
info:
  contact: {}
paths:
  /healthcheck:
    get:
      description: Check the health status of the service
      produces:
      - text/plain
      responses:
        "200":
          description: 'STATUS: OK'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Health check
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/http.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Login a user
  /logout:
    post:
      description: Log out the user by clearing the authentication token
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            type: string
      summary: Logout a user
  /places:
    get:
      description: Retrieve a list of places from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of places
          schema:
            items:
              $ref: '#/definitions/models.Place'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Get a list of places
  /places/{placeID}/reviews:
    get:
      description: Get all reviews for a specific place
      parameters:
      - description: Place ID
        in: path
        name: placeID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of reviews
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
        "400":
          description: Invalid place ID
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "404":
          description: No reviews found for the place
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Failed to retrieve reviews
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Retrieve reviews by place ID
  /reviews:
    post:
      consumes:
      - application/json
      description: Create a new review for a place
      parameters:
      - description: Review details
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "201":
          description: Review created successfully
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Failed to create review
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Create a new review
  /reviews/{id}:
    delete:
      description: Delete a review by review ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Review deleted successfully
        "400":
          description: Invalid review ID
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "404":
          description: Review not found
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Failed to delete review
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Delete a review
    get:
      description: Get review details by review ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Review details
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: Invalid review ID
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "404":
          description: Review not found
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Failed to retrieve review
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Retrieve a review by ID
    put:
      consumes:
      - application/json
      description: Update review details by review ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated review details
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "200":
          description: Review updated successfully
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: Invalid review ID
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "404":
          description: Review not found
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Failed to update review
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Update an existing review
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user with login and password
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/http.Credentials'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Sign up a new user
  /users/me:
    get:
      description: Retrieve the current authenticated user information
      produces:
      - application/json
      responses:
        "200":
          description: Current user
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponses.ErrorResponse'
      summary: Get the current user
swagger: "2.0"
